name: 'User Management'
description: |-

  APIs to manage the user resource.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/users
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the user resource.
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of users.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page_size:
        name: page_size
        description: 'Size per page. Default to 20.'
        required: true
        example: 20
        type: integer
        custom: []
      page:
        name: page
        description: 'Page to view.'
        required: false
        example: 1
        type: integer
        custom: []
    cleanQueryParameters:
      page_size: 20
      page: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":47,"name":"Salma Kovacek","email":"wdibbert@example.net","created_at":"2023-03-05T19:05:20.000000Z","updated_at":"2023-03-05T19:05:20.000000Z"},{"id":48,"name":"Ms. Ettie West","email":"loconnell@example.net","created_at":"2023-03-05T19:05:20.000000Z","updated_at":"2023-03-05T19:05:20.000000Z"}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the user resource.
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":49,"name":"Evelyn Schultz Sr.","email":"penelope71@example.com","created_at":"2023-03-05T19:05:20.000000Z","updated_at":"2023-03-05T19:05:20.000000Z"},{"id":50,"name":"Edwardo Larkin","email":"daphnee.mills@example.org","created_at":"2023-03-05T19:05:20.000000Z","updated_at":"2023-03-05T19:05:20.000000Z"}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/users
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the user resource.
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the user.'
        required: true
        example: 'John Doe'
        type: string
        custom: []
      email:
        name: email
        description: 'Email address of the user.'
        required: true
        example: johndoe@doe.com
        type: string
        custom: []
      password:
        name: password
        description: 'Password of the user.'
        required: true
        example: 'W0M;GnVUf)?{H,r'
        type: string
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: johndoe@doe.com
      password: 'W0M;GnVUf)?{H,r'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":51,"name":"Elmer O''Keefe","email":"bennie.schmitt@example.org","created_at":"2023-03-05T19:05:20.000000Z","updated_at":"2023-03-05T19:05:20.000000Z"},{"id":52,"name":"Miss Joana Baumbach DVM","email":"victor.green@example.com","created_at":"2023-03-05T19:05:20.000000Z","updated_at":"2023-03-05T19:05:20.000000Z"}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the user resource.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the user.'
        required: true
        example: 'John Doe'
        type: string
        custom: []
      email:
        name: email
        description: 'Email address of the user.'
        required: true
        example: johndoe@doe.com
        type: string
        custom: []
      password:
        name: password
        description: 'Password of the user.'
        required: true
        example: 'uM<!1I<)\}h'
        type: string
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: johndoe@doe.com
      password: 'uM<!1I<)\}h'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":53,"name":"Colleen Gerlach DVM","email":"alang@example.net","created_at":"2023-03-05T19:05:20.000000Z","updated_at":"2023-03-05T19:05:20.000000Z"},{"id":54,"name":"Carol Hickle","email":"lmoen@example.net","created_at":"2023-03-05T19:05:20.000000Z","updated_at":"2023-03-05T19:05:20.000000Z"}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the user resource.
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":55,"name":"Santina Smith","email":"grant.lazaro@example.net","created_at":"2023-03-05T19:05:20.000000Z","updated_at":"2023-03-05T19:05:20.000000Z"},{"id":56,"name":"Keeley Gleason","email":"coty.carter@example.org","created_at":"2023-03-05T19:05:20.000000Z","updated_at":"2023-03-05T19:05:20.000000Z"}]}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: '{ "data": "Successfully"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
